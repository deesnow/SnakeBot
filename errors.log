2019-04-29 14:48:22,347 - __main__ - ERROR - cmdGetLink cannot be unloaded. [Extension 'cmdGetLink' has not been loaded.]
Traceback (most recent call last):
  File "f:\_DEV\Discord\SnakeBot\__main__.py", line 64, in unload
    bot.unload_extension(extension)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\ext\commands\bot.py", line 650, in unload_extension
    raise errors.ExtensionNotLoaded(name)
discord.ext.commands.errors.ExtensionNotLoaded: Extension 'cmdGetLink' has not been loaded.
2019-04-29 14:48:41,076 - __main__ - ERROR - cmdGetLink cannot be loaded. [Extension 'cmdGetLink' could not be loaded.]
Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\ext\commands\bot.py", line 618, in load_extension
    lib = importlib.import_module(name)
  File "F:\_DEV\Envs\SnakeBot\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 978, in _gcd_import
  File "<frozen importlib._bootstrap>", line 961, in _find_and_load
  File "<frozen importlib._bootstrap>", line 948, in _find_and_load_unlocked
ModuleNotFoundError: No module named 'cmdGetLink'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "f:\_DEV\Discord\SnakeBot\__main__.py", line 53, in load
    bot.load_extension(extension)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\ext\commands\bot.py", line 620, in load_extension
    raise errors.ExtensionNotFound(name, e) from e
discord.ext.commands.errors.ExtensionNotFound: Extension 'cmdGetLink' could not be loaded.
2019-04-29 15:52:51,141 - db_handler - ERROR - Get allycode is FAILED. 'str' object has no attribute 'formant'
Traceback (most recent call last):
  File "f:\_DEV\Discord\SnakeBot\db_handler.py", line 116, in get_allycode
    self.logger.info('{} found for {}'.formant(self.allycode, self.user_id))
AttributeError: 'str' object has no attribute 'formant'
2019-04-29 15:52:51,806 - swgoh_handler - ERROR - GET url is failed - [Expecting value: line 2 column 1 (char 1)]
Traceback (most recent call last):
  File "f:\_DEV\Discord\SnakeBot\swgoh_handler.py", line 25, in swgoh_getuser
    return json.loads(self.response.text)
  File "d:\python3.6-64\Lib\json\__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "d:\python3.6-64\Lib\json\decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "d:\python3.6-64\Lib\json\decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 2 column 1 (char 1)
2019-04-29 16:09:46,303 - db_handler - ERROR - Get allycode is FAILED. 'str' object has no attribute 'formant'
Traceback (most recent call last):
  File "f:\_DEV\Discord\SnakeBot\db_handler.py", line 116, in get_allycode
    self.logger.info('{} found for {}'.formant(self.allycode, self.user_id))
AttributeError: 'str' object has no attribute 'formant'
2019-04-29 16:20:02,150 - discord.client - ERROR - Attempting a reconnect in 0.84s
Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\gateway.py", line 464, in poll_event
    msg = await self.recv()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\websockets\protocol.py", line 350, in recv
    yield from self.ensure_open()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\websockets\protocol.py", line 501, in ensure_open
    self.close_code, self.close_reason) from self.transfer_data_exc
websockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 1000 (OK), no reason

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 431, in connect
    await self._connect()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 395, in _connect
    await self.ws.poll_event()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\gateway.py", line 472, in poll_event
    raise ConnectionClosed(exc, shard_id=self.shard_id) from exc
discord.errors.ConnectionClosed: WebSocket connection is closed: code = 1000 (OK), no reason
2019-04-29 16:27:56,135 - discord.client - ERROR - Attempting a reconnect in 0.57s
Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\gateway.py", line 464, in poll_event
    msg = await self.recv()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\websockets\protocol.py", line 350, in recv
    yield from self.ensure_open()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\websockets\protocol.py", line 501, in ensure_open
    self.close_code, self.close_reason) from self.transfer_data_exc
websockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 1000 (OK), no reason

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 431, in connect
    await self._connect()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 395, in _connect
    await self.ws.poll_event()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\gateway.py", line 472, in poll_event
    raise ConnectionClosed(exc, shard_id=self.shard_id) from exc
discord.errors.ConnectionClosed: WebSocket connection is closed: code = 1000 (OK), no reason
2019-04-30 15:54:20,065 - __main__ - ERROR - cndCheckUser cannot be unloaded. [Extension 'cndCheckUser' has not been loaded.]
Traceback (most recent call last):
  File "f:\_DEV\Discord\SnakeBot\__main__.py", line 64, in unload
    bot.unload_extension(extension)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\ext\commands\bot.py", line 650, in unload_extension
    raise errors.ExtensionNotLoaded(name)
discord.ext.commands.errors.ExtensionNotLoaded: Extension 'cndCheckUser' has not been loaded.
2019-04-30 15:54:37,724 - __main__ - ERROR - CkeckUser cannot be unloaded. [Extension 'CkeckUser' has not been loaded.]
Traceback (most recent call last):
  File "f:\_DEV\Discord\SnakeBot\__main__.py", line 64, in unload
    bot.unload_extension(extension)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\ext\commands\bot.py", line 650, in unload_extension
    raise errors.ExtensionNotLoaded(name)
discord.ext.commands.errors.ExtensionNotLoaded: Extension 'CkeckUser' has not been loaded.
2019-04-30 16:16:05,328 - discord.client - ERROR - Attempting a reconnect in 1.56s
Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\gateway.py", line 464, in poll_event
    msg = await self.recv()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\websockets\protocol.py", line 350, in recv
    yield from self.ensure_open()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\websockets\protocol.py", line 512, in ensure_open
    self.close_code, self.close_reason) from self.transfer_data_exc
websockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 1000 (OK), no reason

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 431, in connect
    await self._connect()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 395, in _connect
    await self.ws.poll_event()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\gateway.py", line 472, in poll_event
    raise ConnectionClosed(exc, shard_id=self.shard_id) from exc
discord.errors.ConnectionClosed: WebSocket connection is closed: code = 1000 (OK), no reason
2019-04-30 16:29:34,111 - discord.client - ERROR - Attempting a reconnect in 1.70s
Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\gateway.py", line 464, in poll_event
    msg = await self.recv()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\websockets\protocol.py", line 350, in recv
    yield from self.ensure_open()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\websockets\protocol.py", line 501, in ensure_open
    self.close_code, self.close_reason) from self.transfer_data_exc
websockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 1000 (OK), no reason

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 431, in connect
    await self._connect()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 395, in _connect
    await self.ws.poll_event()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\gateway.py", line 472, in poll_event
    raise ConnectionClosed(exc, shard_id=self.shard_id) from exc
discord.errors.ConnectionClosed: WebSocket connection is closed: code = 1000 (OK), no reason
2019-04-30 16:29:44,191 - __main__ - ERROR - cndCheckuser cannot be unloaded. [Extension 'cndCheckuser' has not been loaded.]
Traceback (most recent call last):
  File "f:\_DEV\Discord\SnakeBot\__main__.py", line 64, in unload
    bot.unload_extension(extension)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\ext\commands\bot.py", line 650, in unload_extension
    raise errors.ExtensionNotLoaded(name)
discord.ext.commands.errors.ExtensionNotLoaded: Extension 'cndCheckuser' has not been loaded.
2019-04-30 16:29:56,354 - __main__ - ERROR - cmdCheckuser cannot be unloaded. [Extension 'cmdCheckuser' has not been loaded.]
Traceback (most recent call last):
  File "f:\_DEV\Discord\SnakeBot\__main__.py", line 64, in unload
    bot.unload_extension(extension)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\ext\commands\bot.py", line 650, in unload_extension
    raise errors.ExtensionNotLoaded(name)
discord.ext.commands.errors.ExtensionNotLoaded: Extension 'cmdCheckuser' has not been loaded.
2019-05-01 19:02:22,276 - db_handler - ERROR - User update is FAILED
Traceback (most recent call last):
  File "f:\_DEV\Discord\SnakeBot\db_handler.py", line 115, in user_update
    self.action2 = self.col_discord.update_one(self.query2, self.new_value)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\pymongo\collection.py", line 1002, in update_one
    session=session),
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\pymongo\collection.py", line 858, in _update_retryable
    _update, session)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\pymongo\mongo_client.py", line 1280, in _retryable_write
    return self._retry_with_session(retryable, func, s, None)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\pymongo\mongo_client.py", line 1233, in _retry_with_session
    return func(session, sock_info, retryable)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\pymongo\collection.py", line 854, in _update
    retryable_write=retryable_write)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\pymongo\collection.py", line 824, in _update
    retryable_write=retryable_write).copy()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\pymongo\pool.py", line 589, in command
    self._raise_connection_failure(error)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\pymongo\pool.py", line 750, in _raise_connection_failure
    raise error
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\pymongo\pool.py", line 584, in command
    user_fields=user_fields)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\pymongo\network.py", line 121, in command
    codec_options, ctx=compression_ctx)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\pymongo\message.py", line 678, in _op_msg
    flags, command, identifier, docs, check_keys, opts)
bson.errors.InvalidDocument: documents must have only string keys, key was datetime.date(2019, 5, 1)
2019-05-01 19:24:07,097 - discord.client - ERROR - Attempting a reconnect in 1.17s
Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 955, in _create_direct_connection
    traces=traces), loop=self._loop)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 825, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\resolver.py", line 30, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "d:\python3.6-64\Lib\concurrent\futures\thread.py", line 55, in run
    result = self.fn(*self.args, **self.kwargs)
  File "d:\python3.6-64\Lib\socket.py", line 743, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 431, in connect
    await self._connect()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 401, in _connect
    self.ws = await asyncio.wait_for(coro, timeout=180.0, loop=self.loop)
  File "d:\python3.6-64\Lib\asyncio\tasks.py", line 358, in wait_for
    return fut.result()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\gateway.py", line 219, in from_client
    gateway = await client.http.get_gateway()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 786, in get_gateway
    data = await self.request(Route('GET', '/gateway'))
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 158, in request
    async with self.__session.request(method, url, **kwargs) as r:
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 1005, in __aenter__
    self._resp = await self._coro
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 476, in _request
    timeout=real_timeout
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 522, in connect
    proto = await self._create_connection(req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 854, in _create_connection
    req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 959, in _create_direct_connection
    raise ClientConnectorError(req.connection_key, exc) from exc
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host discordapp.com:443 ssl:None [getaddrinfo failed]
2019-05-01 19:24:08,318 - discord.client - ERROR - Attempting a reconnect in 1.46s
Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 955, in _create_direct_connection
    traces=traces), loop=self._loop)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 825, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\resolver.py", line 30, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "d:\python3.6-64\Lib\concurrent\futures\thread.py", line 55, in run
    result = self.fn(*self.args, **self.kwargs)
  File "d:\python3.6-64\Lib\socket.py", line 743, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 431, in connect
    await self._connect()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 392, in _connect
    self.ws = await asyncio.wait_for(coro, timeout=180.0, loop=self.loop)
  File "d:\python3.6-64\Lib\asyncio\tasks.py", line 358, in wait_for
    return fut.result()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\gateway.py", line 219, in from_client
    gateway = await client.http.get_gateway()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 786, in get_gateway
    data = await self.request(Route('GET', '/gateway'))
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 158, in request
    async with self.__session.request(method, url, **kwargs) as r:
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 1005, in __aenter__
    self._resp = await self._coro
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 476, in _request
    timeout=real_timeout
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 522, in connect
    proto = await self._create_connection(req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 854, in _create_connection
    req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 959, in _create_direct_connection
    raise ClientConnectorError(req.connection_key, exc) from exc
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host discordapp.com:443 ssl:None [getaddrinfo failed]
2019-05-01 19:24:09,800 - discord.client - ERROR - Attempting a reconnect in 4.25s
Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 955, in _create_direct_connection
    traces=traces), loop=self._loop)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 825, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\resolver.py", line 30, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "d:\python3.6-64\Lib\concurrent\futures\thread.py", line 55, in run
    result = self.fn(*self.args, **self.kwargs)
  File "d:\python3.6-64\Lib\socket.py", line 743, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 431, in connect
    await self._connect()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 392, in _connect
    self.ws = await asyncio.wait_for(coro, timeout=180.0, loop=self.loop)
  File "d:\python3.6-64\Lib\asyncio\tasks.py", line 358, in wait_for
    return fut.result()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\gateway.py", line 219, in from_client
    gateway = await client.http.get_gateway()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 786, in get_gateway
    data = await self.request(Route('GET', '/gateway'))
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 158, in request
    async with self.__session.request(method, url, **kwargs) as r:
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 1005, in __aenter__
    self._resp = await self._coro
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 476, in _request
    timeout=real_timeout
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 522, in connect
    proto = await self._create_connection(req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 854, in _create_connection
    req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 959, in _create_direct_connection
    raise ClientConnectorError(req.connection_key, exc) from exc
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host discordapp.com:443 ssl:None [getaddrinfo failed]
2019-05-01 19:24:26,080 - discord.client - ERROR - Attempting a reconnect in 3.31s
Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 955, in _create_direct_connection
    traces=traces), loop=self._loop)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 825, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\resolver.py", line 30, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "d:\python3.6-64\Lib\concurrent\futures\thread.py", line 55, in run
    result = self.fn(*self.args, **self.kwargs)
  File "d:\python3.6-64\Lib\socket.py", line 743, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 431, in connect
    await self._connect()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 392, in _connect
    self.ws = await asyncio.wait_for(coro, timeout=180.0, loop=self.loop)
  File "d:\python3.6-64\Lib\asyncio\tasks.py", line 358, in wait_for
    return fut.result()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\gateway.py", line 219, in from_client
    gateway = await client.http.get_gateway()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 786, in get_gateway
    data = await self.request(Route('GET', '/gateway'))
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 158, in request
    async with self.__session.request(method, url, **kwargs) as r:
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 1005, in __aenter__
    self._resp = await self._coro
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 476, in _request
    timeout=real_timeout
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 522, in connect
    proto = await self._create_connection(req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 854, in _create_connection
    req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 959, in _create_direct_connection
    raise ClientConnectorError(req.connection_key, exc) from exc
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host discordapp.com:443 ssl:None [getaddrinfo failed]
2019-05-01 19:24:29,426 - discord.client - ERROR - Attempting a reconnect in 13.01s
Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 955, in _create_direct_connection
    traces=traces), loop=self._loop)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 825, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\resolver.py", line 30, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "d:\python3.6-64\Lib\concurrent\futures\thread.py", line 55, in run
    result = self.fn(*self.args, **self.kwargs)
  File "d:\python3.6-64\Lib\socket.py", line 743, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 431, in connect
    await self._connect()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 392, in _connect
    self.ws = await asyncio.wait_for(coro, timeout=180.0, loop=self.loop)
  File "d:\python3.6-64\Lib\asyncio\tasks.py", line 358, in wait_for
    return fut.result()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\gateway.py", line 219, in from_client
    gateway = await client.http.get_gateway()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 786, in get_gateway
    data = await self.request(Route('GET', '/gateway'))
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 158, in request
    async with self.__session.request(method, url, **kwargs) as r:
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 1005, in __aenter__
    self._resp = await self._coro
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 476, in _request
    timeout=real_timeout
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 522, in connect
    proto = await self._create_connection(req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 854, in _create_connection
    req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 959, in _create_direct_connection
    raise ClientConnectorError(req.connection_key, exc) from exc
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host discordapp.com:443 ssl:None [getaddrinfo failed]
2019-05-01 19:24:42,449 - discord.client - ERROR - Attempting a reconnect in 24.24s
Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 955, in _create_direct_connection
    traces=traces), loop=self._loop)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 825, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\resolver.py", line 30, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "d:\python3.6-64\Lib\concurrent\futures\thread.py", line 55, in run
    result = self.fn(*self.args, **self.kwargs)
  File "d:\python3.6-64\Lib\socket.py", line 743, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 431, in connect
    await self._connect()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 392, in _connect
    self.ws = await asyncio.wait_for(coro, timeout=180.0, loop=self.loop)
  File "d:\python3.6-64\Lib\asyncio\tasks.py", line 358, in wait_for
    return fut.result()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\gateway.py", line 219, in from_client
    gateway = await client.http.get_gateway()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 786, in get_gateway
    data = await self.request(Route('GET', '/gateway'))
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 158, in request
    async with self.__session.request(method, url, **kwargs) as r:
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 1005, in __aenter__
    self._resp = await self._coro
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 476, in _request
    timeout=real_timeout
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 522, in connect
    proto = await self._create_connection(req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 854, in _create_connection
    req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 959, in _create_direct_connection
    raise ClientConnectorError(req.connection_key, exc) from exc
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host discordapp.com:443 ssl:None [getaddrinfo failed]
2019-05-01 19:25:06,701 - discord.client - ERROR - Attempting a reconnect in 77.37s
Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 955, in _create_direct_connection
    traces=traces), loop=self._loop)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 825, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\resolver.py", line 30, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "d:\python3.6-64\Lib\concurrent\futures\thread.py", line 55, in run
    result = self.fn(*self.args, **self.kwargs)
  File "d:\python3.6-64\Lib\socket.py", line 743, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 431, in connect
    await self._connect()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 392, in _connect
    self.ws = await asyncio.wait_for(coro, timeout=180.0, loop=self.loop)
  File "d:\python3.6-64\Lib\asyncio\tasks.py", line 358, in wait_for
    return fut.result()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\gateway.py", line 219, in from_client
    gateway = await client.http.get_gateway()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 786, in get_gateway
    data = await self.request(Route('GET', '/gateway'))
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 158, in request
    async with self.__session.request(method, url, **kwargs) as r:
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 1005, in __aenter__
    self._resp = await self._coro
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 476, in _request
    timeout=real_timeout
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 522, in connect
    proto = await self._create_connection(req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 854, in _create_connection
    req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 959, in _create_direct_connection
    raise ClientConnectorError(req.connection_key, exc) from exc
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host discordapp.com:443 ssl:None [getaddrinfo failed]
2019-05-01 23:05:18,745 - discord.client - ERROR - Attempting a reconnect in 1.36s
Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 955, in _create_direct_connection
    traces=traces), loop=self._loop)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 825, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\resolver.py", line 30, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "d:\python3.6-64\Lib\concurrent\futures\thread.py", line 55, in run
    result = self.fn(*self.args, **self.kwargs)
  File "d:\python3.6-64\Lib\socket.py", line 743, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 431, in connect
    await self._connect()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 401, in _connect
    self.ws = await asyncio.wait_for(coro, timeout=180.0, loop=self.loop)
  File "d:\python3.6-64\Lib\asyncio\tasks.py", line 358, in wait_for
    return fut.result()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\gateway.py", line 219, in from_client
    gateway = await client.http.get_gateway()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 786, in get_gateway
    data = await self.request(Route('GET', '/gateway'))
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 158, in request
    async with self.__session.request(method, url, **kwargs) as r:
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 1005, in __aenter__
    self._resp = await self._coro
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 476, in _request
    timeout=real_timeout
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 522, in connect
    proto = await self._create_connection(req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 854, in _create_connection
    req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 959, in _create_direct_connection
    raise ClientConnectorError(req.connection_key, exc) from exc
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host discordapp.com:443 ssl:None [getaddrinfo failed]
2019-05-01 23:05:20,524 - discord.client - ERROR - Attempting a reconnect in 2.92s
Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 955, in _create_direct_connection
    traces=traces), loop=self._loop)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 825, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\resolver.py", line 30, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "d:\python3.6-64\Lib\concurrent\futures\thread.py", line 55, in run
    result = self.fn(*self.args, **self.kwargs)
  File "d:\python3.6-64\Lib\socket.py", line 743, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 431, in connect
    await self._connect()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 392, in _connect
    self.ws = await asyncio.wait_for(coro, timeout=180.0, loop=self.loop)
  File "d:\python3.6-64\Lib\asyncio\tasks.py", line 358, in wait_for
    return fut.result()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\gateway.py", line 219, in from_client
    gateway = await client.http.get_gateway()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 786, in get_gateway
    data = await self.request(Route('GET', '/gateway'))
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 158, in request
    async with self.__session.request(method, url, **kwargs) as r:
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 1005, in __aenter__
    self._resp = await self._coro
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 476, in _request
    timeout=real_timeout
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 522, in connect
    proto = await self._create_connection(req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 854, in _create_connection
    req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 959, in _create_direct_connection
    raise ClientConnectorError(req.connection_key, exc) from exc
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host discordapp.com:443 ssl:None [getaddrinfo failed]
2019-05-01 23:05:23,974 - discord.client - ERROR - Attempting a reconnect in 4.76s
Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 955, in _create_direct_connection
    traces=traces), loop=self._loop)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 825, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\resolver.py", line 30, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "d:\python3.6-64\Lib\concurrent\futures\thread.py", line 55, in run
    result = self.fn(*self.args, **self.kwargs)
  File "d:\python3.6-64\Lib\socket.py", line 743, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 431, in connect
    await self._connect()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 392, in _connect
    self.ws = await asyncio.wait_for(coro, timeout=180.0, loop=self.loop)
  File "d:\python3.6-64\Lib\asyncio\tasks.py", line 358, in wait_for
    return fut.result()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\gateway.py", line 219, in from_client
    gateway = await client.http.get_gateway()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 786, in get_gateway
    data = await self.request(Route('GET', '/gateway'))
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 158, in request
    async with self.__session.request(method, url, **kwargs) as r:
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 1005, in __aenter__
    self._resp = await self._coro
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 476, in _request
    timeout=real_timeout
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 522, in connect
    proto = await self._create_connection(req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 854, in _create_connection
    req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 959, in _create_direct_connection
    raise ClientConnectorError(req.connection_key, exc) from exc
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host discordapp.com:443 ssl:None [getaddrinfo failed]
2019-05-02 07:51:29,166 - discord.client - ERROR - Attempting a reconnect in 0.75s
Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 955, in _create_direct_connection
    traces=traces), loop=self._loop)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 825, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\resolver.py", line 30, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "d:\python3.6-64\Lib\concurrent\futures\thread.py", line 55, in run
    result = self.fn(*self.args, **self.kwargs)
  File "d:\python3.6-64\Lib\socket.py", line 743, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 431, in connect
    await self._connect()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 401, in _connect
    self.ws = await asyncio.wait_for(coro, timeout=180.0, loop=self.loop)
  File "d:\python3.6-64\Lib\asyncio\tasks.py", line 358, in wait_for
    return fut.result()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\gateway.py", line 219, in from_client
    gateway = await client.http.get_gateway()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 786, in get_gateway
    data = await self.request(Route('GET', '/gateway'))
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 158, in request
    async with self.__session.request(method, url, **kwargs) as r:
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 1005, in __aenter__
    self._resp = await self._coro
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 476, in _request
    timeout=real_timeout
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 522, in connect
    proto = await self._create_connection(req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 854, in _create_connection
    req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 959, in _create_direct_connection
    raise ClientConnectorError(req.connection_key, exc) from exc
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host discordapp.com:443 ssl:None [getaddrinfo failed]
2019-05-02 07:51:34,453 - discord.client - ERROR - Attempting a reconnect in 1.30s
Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 955, in _create_direct_connection
    traces=traces), loop=self._loop)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 825, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\resolver.py", line 30, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "d:\python3.6-64\Lib\concurrent\futures\thread.py", line 55, in run
    result = self.fn(*self.args, **self.kwargs)
  File "d:\python3.6-64\Lib\socket.py", line 743, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 431, in connect
    await self._connect()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 392, in _connect
    self.ws = await asyncio.wait_for(coro, timeout=180.0, loop=self.loop)
  File "d:\python3.6-64\Lib\asyncio\tasks.py", line 358, in wait_for
    return fut.result()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\gateway.py", line 219, in from_client
    gateway = await client.http.get_gateway()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 786, in get_gateway
    data = await self.request(Route('GET', '/gateway'))
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 158, in request
    async with self.__session.request(method, url, **kwargs) as r:
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 1005, in __aenter__
    self._resp = await self._coro
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 476, in _request
    timeout=real_timeout
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 522, in connect
    proto = await self._create_connection(req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 854, in _create_connection
    req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 959, in _create_direct_connection
    raise ClientConnectorError(req.connection_key, exc) from exc
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host discordapp.com:443 ssl:None [getaddrinfo failed]
2019-05-02 07:51:37,681 - discord.client - ERROR - Attempting a reconnect in 6.88s
Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 431, in connect
    await self._connect()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 392, in _connect
    self.ws = await asyncio.wait_for(coro, timeout=180.0, loop=self.loop)
  File "d:\python3.6-64\Lib\asyncio\tasks.py", line 358, in wait_for
    return fut.result()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\gateway.py", line 220, in from_client
    ws = await websockets.connect(gateway, loop=client.loop, klass=cls, compression=None)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\websockets\py35\client.py", line 12, in __await_impl__
    transport, protocol = await self._creating_connection
  File "d:\python3.6-64\Lib\asyncio\base_events.py", line 733, in create_connection
    infos = f1.result()
  File "d:\python3.6-64\Lib\concurrent\futures\thread.py", line 55, in run
    result = self.fn(*self.args, **self.kwargs)
  File "d:\python3.6-64\Lib\socket.py", line 743, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed
2019-05-02 20:58:12,986 - discord.client - ERROR - Attempting a reconnect in 0.46s
Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 955, in _create_direct_connection
    traces=traces), loop=self._loop)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 825, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\resolver.py", line 30, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "d:\python3.6-64\Lib\concurrent\futures\thread.py", line 55, in run
    result = self.fn(*self.args, **self.kwargs)
  File "d:\python3.6-64\Lib\socket.py", line 743, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 431, in connect
    await self._connect()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 401, in _connect
    self.ws = await asyncio.wait_for(coro, timeout=180.0, loop=self.loop)
  File "d:\python3.6-64\Lib\asyncio\tasks.py", line 358, in wait_for
    return fut.result()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\gateway.py", line 219, in from_client
    gateway = await client.http.get_gateway()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 786, in get_gateway
    data = await self.request(Route('GET', '/gateway'))
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 158, in request
    async with self.__session.request(method, url, **kwargs) as r:
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 1005, in __aenter__
    self._resp = await self._coro
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 476, in _request
    timeout=real_timeout
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 522, in connect
    proto = await self._create_connection(req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 854, in _create_connection
    req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 959, in _create_direct_connection
    raise ClientConnectorError(req.connection_key, exc) from exc
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host discordapp.com:443 ssl:None [getaddrinfo failed]
2019-05-04 19:01:58,687 - discord.client - ERROR - Attempting a reconnect in 0.07s
Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 955, in _create_direct_connection
    traces=traces), loop=self._loop)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 825, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\resolver.py", line 30, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "d:\python3.6-64\Lib\concurrent\futures\thread.py", line 55, in run
    result = self.fn(*self.args, **self.kwargs)
  File "d:\python3.6-64\Lib\socket.py", line 743, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 431, in connect
    await self._connect()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 401, in _connect
    self.ws = await asyncio.wait_for(coro, timeout=180.0, loop=self.loop)
  File "d:\python3.6-64\Lib\asyncio\tasks.py", line 358, in wait_for
    return fut.result()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\gateway.py", line 219, in from_client
    gateway = await client.http.get_gateway()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 786, in get_gateway
    data = await self.request(Route('GET', '/gateway'))
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 158, in request
    async with self.__session.request(method, url, **kwargs) as r:
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 1005, in __aenter__
    self._resp = await self._coro
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 476, in _request
    timeout=real_timeout
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 522, in connect
    proto = await self._create_connection(req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 854, in _create_connection
    req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 959, in _create_direct_connection
    raise ClientConnectorError(req.connection_key, exc) from exc
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host discordapp.com:443 ssl:None [getaddrinfo failed]
2019-05-04 19:02:02,450 - discord.client - ERROR - Attempting a reconnect in 3.28s
Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 955, in _create_direct_connection
    traces=traces), loop=self._loop)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 825, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\resolver.py", line 30, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "d:\python3.6-64\Lib\concurrent\futures\thread.py", line 55, in run
    result = self.fn(*self.args, **self.kwargs)
  File "d:\python3.6-64\Lib\socket.py", line 743, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 431, in connect
    await self._connect()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 392, in _connect
    self.ws = await asyncio.wait_for(coro, timeout=180.0, loop=self.loop)
  File "d:\python3.6-64\Lib\asyncio\tasks.py", line 358, in wait_for
    return fut.result()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\gateway.py", line 219, in from_client
    gateway = await client.http.get_gateway()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 786, in get_gateway
    data = await self.request(Route('GET', '/gateway'))
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 158, in request
    async with self.__session.request(method, url, **kwargs) as r:
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 1005, in __aenter__
    self._resp = await self._coro
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 476, in _request
    timeout=real_timeout
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 522, in connect
    proto = await self._create_connection(req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 854, in _create_connection
    req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 959, in _create_direct_connection
    raise ClientConnectorError(req.connection_key, exc) from exc
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host discordapp.com:443 ssl:None [getaddrinfo failed]
2019-05-04 19:02:06,007 - discord.client - ERROR - Attempting a reconnect in 0.94s
Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 955, in _create_direct_connection
    traces=traces), loop=self._loop)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 825, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\resolver.py", line 30, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "d:\python3.6-64\Lib\concurrent\futures\thread.py", line 55, in run
    result = self.fn(*self.args, **self.kwargs)
  File "d:\python3.6-64\Lib\socket.py", line 743, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 431, in connect
    await self._connect()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 392, in _connect
    self.ws = await asyncio.wait_for(coro, timeout=180.0, loop=self.loop)
  File "d:\python3.6-64\Lib\asyncio\tasks.py", line 358, in wait_for
    return fut.result()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\gateway.py", line 219, in from_client
    gateway = await client.http.get_gateway()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 786, in get_gateway
    data = await self.request(Route('GET', '/gateway'))
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 158, in request
    async with self.__session.request(method, url, **kwargs) as r:
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 1005, in __aenter__
    self._resp = await self._coro
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 476, in _request
    timeout=real_timeout
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 522, in connect
    proto = await self._create_connection(req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 854, in _create_connection
    req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 959, in _create_direct_connection
    raise ClientConnectorError(req.connection_key, exc) from exc
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host discordapp.com:443 ssl:None [getaddrinfo failed]
2019-05-04 19:02:07,164 - discord.client - ERROR - Attempting a reconnect in 2.45s
Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 955, in _create_direct_connection
    traces=traces), loop=self._loop)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 825, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\resolver.py", line 30, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "d:\python3.6-64\Lib\concurrent\futures\thread.py", line 55, in run
    result = self.fn(*self.args, **self.kwargs)
  File "d:\python3.6-64\Lib\socket.py", line 743, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 431, in connect
    await self._connect()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 392, in _connect
    self.ws = await asyncio.wait_for(coro, timeout=180.0, loop=self.loop)
  File "d:\python3.6-64\Lib\asyncio\tasks.py", line 358, in wait_for
    return fut.result()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\gateway.py", line 219, in from_client
    gateway = await client.http.get_gateway()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 786, in get_gateway
    data = await self.request(Route('GET', '/gateway'))
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 158, in request
    async with self.__session.request(method, url, **kwargs) as r:
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 1005, in __aenter__
    self._resp = await self._coro
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 476, in _request
    timeout=real_timeout
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 522, in connect
    proto = await self._create_connection(req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 854, in _create_connection
    req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 959, in _create_direct_connection
    raise ClientConnectorError(req.connection_key, exc) from exc
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host discordapp.com:443 ssl:None [getaddrinfo failed]
2019-05-04 20:19:02,374 - discord.client - ERROR - Attempting a reconnect in 0.06s
Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 955, in _create_direct_connection
    traces=traces), loop=self._loop)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 825, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\resolver.py", line 30, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "d:\python3.6-64\Lib\concurrent\futures\thread.py", line 55, in run
    result = self.fn(*self.args, **self.kwargs)
  File "d:\python3.6-64\Lib\socket.py", line 743, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 431, in connect
    await self._connect()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 401, in _connect
    self.ws = await asyncio.wait_for(coro, timeout=180.0, loop=self.loop)
  File "d:\python3.6-64\Lib\asyncio\tasks.py", line 358, in wait_for
    return fut.result()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\gateway.py", line 219, in from_client
    gateway = await client.http.get_gateway()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 786, in get_gateway
    data = await self.request(Route('GET', '/gateway'))
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 158, in request
    async with self.__session.request(method, url, **kwargs) as r:
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 1005, in __aenter__
    self._resp = await self._coro
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 476, in _request
    timeout=real_timeout
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 522, in connect
    proto = await self._create_connection(req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 854, in _create_connection
    req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 959, in _create_direct_connection
    raise ClientConnectorError(req.connection_key, exc) from exc
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host discordapp.com:443 ssl:None [getaddrinfo failed]
2019-05-04 21:53:43,187 - discord.client - ERROR - Attempting a reconnect in 1.01s
Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\gateway.py", line 464, in poll_event
    msg = await self.recv()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\websockets\protocol.py", line 350, in recv
    yield from self.ensure_open()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\websockets\protocol.py", line 512, in ensure_open
    self.close_code, self.close_reason) from self.transfer_data_exc
websockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 1000 (OK), no reason

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 431, in connect
    await self._connect()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 395, in _connect
    await self.ws.poll_event()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\gateway.py", line 472, in poll_event
    raise ConnectionClosed(exc, shard_id=self.shard_id) from exc
discord.errors.ConnectionClosed: WebSocket connection is closed: code = 1000 (OK), no reason
2019-05-05 11:56:02,010 - discord.client - ERROR - Attempting a reconnect in 0.03s
Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 955, in _create_direct_connection
    traces=traces), loop=self._loop)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 825, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\resolver.py", line 30, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "d:\python3.6-64\Lib\concurrent\futures\thread.py", line 55, in run
    result = self.fn(*self.args, **self.kwargs)
  File "d:\python3.6-64\Lib\socket.py", line 743, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 431, in connect
    await self._connect()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 401, in _connect
    self.ws = await asyncio.wait_for(coro, timeout=180.0, loop=self.loop)
  File "d:\python3.6-64\Lib\asyncio\tasks.py", line 358, in wait_for
    return fut.result()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\gateway.py", line 219, in from_client
    gateway = await client.http.get_gateway()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 786, in get_gateway
    data = await self.request(Route('GET', '/gateway'))
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 158, in request
    async with self.__session.request(method, url, **kwargs) as r:
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 1005, in __aenter__
    self._resp = await self._coro
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 476, in _request
    timeout=real_timeout
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 522, in connect
    proto = await self._create_connection(req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 854, in _create_connection
    req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 959, in _create_direct_connection
    raise ClientConnectorError(req.connection_key, exc) from exc
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host discordapp.com:443 ssl:None [getaddrinfo failed]
2019-05-05 14:14:54,002 - discord.client - ERROR - Attempting a reconnect in 0.52s
Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 955, in _create_direct_connection
    traces=traces), loop=self._loop)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 825, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\resolver.py", line 30, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "d:\python3.6-64\Lib\concurrent\futures\thread.py", line 55, in run
    result = self.fn(*self.args, **self.kwargs)
  File "d:\python3.6-64\Lib\socket.py", line 743, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 431, in connect
    await self._connect()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 401, in _connect
    self.ws = await asyncio.wait_for(coro, timeout=180.0, loop=self.loop)
  File "d:\python3.6-64\Lib\asyncio\tasks.py", line 358, in wait_for
    return fut.result()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\gateway.py", line 219, in from_client
    gateway = await client.http.get_gateway()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 786, in get_gateway
    data = await self.request(Route('GET', '/gateway'))
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 158, in request
    async with self.__session.request(method, url, **kwargs) as r:
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 1005, in __aenter__
    self._resp = await self._coro
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 476, in _request
    timeout=real_timeout
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 522, in connect
    proto = await self._create_connection(req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 854, in _create_connection
    req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 959, in _create_direct_connection
    raise ClientConnectorError(req.connection_key, exc) from exc
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host discordapp.com:443 ssl:None [getaddrinfo failed]
2019-05-05 14:14:54,723 - discord.client - ERROR - Attempting a reconnect in 3.66s
Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 955, in _create_direct_connection
    traces=traces), loop=self._loop)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 825, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\resolver.py", line 30, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "d:\python3.6-64\Lib\concurrent\futures\thread.py", line 55, in run
    result = self.fn(*self.args, **self.kwargs)
  File "d:\python3.6-64\Lib\socket.py", line 743, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 431, in connect
    await self._connect()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 392, in _connect
    self.ws = await asyncio.wait_for(coro, timeout=180.0, loop=self.loop)
  File "d:\python3.6-64\Lib\asyncio\tasks.py", line 358, in wait_for
    return fut.result()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\gateway.py", line 219, in from_client
    gateway = await client.http.get_gateway()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 786, in get_gateway
    data = await self.request(Route('GET', '/gateway'))
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 158, in request
    async with self.__session.request(method, url, **kwargs) as r:
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 1005, in __aenter__
    self._resp = await self._coro
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 476, in _request
    timeout=real_timeout
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 522, in connect
    proto = await self._create_connection(req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 854, in _create_connection
    req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 959, in _create_direct_connection
    raise ClientConnectorError(req.connection_key, exc) from exc
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host discordapp.com:443 ssl:None [getaddrinfo failed]
2019-05-06 15:44:32,903 - discord.client - ERROR - Attempting a reconnect in 1.79s
Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\gateway.py", line 464, in poll_event
    msg = await self.recv()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\websockets\protocol.py", line 350, in recv
    yield from self.ensure_open()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\websockets\protocol.py", line 501, in ensure_open
    self.close_code, self.close_reason) from self.transfer_data_exc
websockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 1000 (OK), no reason

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 431, in connect
    await self._connect()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 395, in _connect
    await self.ws.poll_event()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\gateway.py", line 472, in poll_event
    raise ConnectionClosed(exc, shard_id=self.shard_id) from exc
discord.errors.ConnectionClosed: WebSocket connection is closed: code = 1000 (OK), no reason
2019-05-07 08:11:01,412 - db_handler - ERROR - Get allycode is FAILED. localhost:27017: [WinError 10061] No connection could be made because the target machine actively refused it
Traceback (most recent call last):
  File "f:\_DEV\Discord\SnakeBot\db_handler.py", line 146, in get_allycode
    self.allycode = self.col_discord.find_one({'discord_id': self.user_id},{'_id':0, 'ally_code': 1})
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\pymongo\collection.py", line 1269, in find_one
    for result in cursor.limit(-1):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\pymongo\cursor.py", line 1225, in next
    if len(self.__data) or self._refresh():
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\pymongo\cursor.py", line 1117, in _refresh
    self.__session = self.__collection.database.client._ensure_session()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\pymongo\mongo_client.py", line 1598, in _ensure_session
    return self.__start_session(True, causal_consistency=False)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\pymongo\mongo_client.py", line 1551, in __start_session
    server_session = self._get_server_session()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\pymongo\mongo_client.py", line 1584, in _get_server_session
    return self._topology.get_server_session()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\pymongo\topology.py", line 429, in get_server_session
    None)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\pymongo\topology.py", line 200, in _select_servers_loop
    self._error_message(selector))
pymongo.errors.ServerSelectionTimeoutError: localhost:27017: [WinError 10061] No connection could be made because the target machine actively refused it
2019-05-07 08:11:02,398 - swgoh_handler - ERROR - GET url is failed - [Expecting value: line 2 column 1 (char 1)]
Traceback (most recent call last):
  File "f:\_DEV\Discord\SnakeBot\swgoh_handler.py", line 25, in swgoh_getuser
    return json.loads(self.response.text)
  File "d:\python3.6-64\Lib\json\__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "d:\python3.6-64\Lib\json\decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "d:\python3.6-64\Lib\json\decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 2 column 1 (char 1)
2019-05-07 09:18:08,765 - discord.client - ERROR - Attempting a reconnect in 0.53s
Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 955, in _create_direct_connection
    traces=traces), loop=self._loop)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 825, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\resolver.py", line 30, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "d:\python3.6-64\Lib\concurrent\futures\thread.py", line 55, in run
    result = self.fn(*self.args, **self.kwargs)
  File "d:\python3.6-64\Lib\socket.py", line 743, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 431, in connect
    await self._connect()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 401, in _connect
    self.ws = await asyncio.wait_for(coro, timeout=180.0, loop=self.loop)
  File "d:\python3.6-64\Lib\asyncio\tasks.py", line 358, in wait_for
    return fut.result()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\gateway.py", line 219, in from_client
    gateway = await client.http.get_gateway()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 786, in get_gateway
    data = await self.request(Route('GET', '/gateway'))
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 158, in request
    async with self.__session.request(method, url, **kwargs) as r:
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 1005, in __aenter__
    self._resp = await self._coro
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 476, in _request
    timeout=real_timeout
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 522, in connect
    proto = await self._create_connection(req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 854, in _create_connection
    req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 959, in _create_direct_connection
    raise ClientConnectorError(req.connection_key, exc) from exc
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host discordapp.com:443 ssl:None [getaddrinfo failed]
2019-05-07 09:18:10,362 - discord.client - ERROR - Attempting a reconnect in 0.48s
Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 955, in _create_direct_connection
    traces=traces), loop=self._loop)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 825, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\resolver.py", line 30, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "d:\python3.6-64\Lib\concurrent\futures\thread.py", line 55, in run
    result = self.fn(*self.args, **self.kwargs)
  File "d:\python3.6-64\Lib\socket.py", line 743, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 431, in connect
    await self._connect()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 392, in _connect
    self.ws = await asyncio.wait_for(coro, timeout=180.0, loop=self.loop)
  File "d:\python3.6-64\Lib\asyncio\tasks.py", line 358, in wait_for
    return fut.result()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\gateway.py", line 219, in from_client
    gateway = await client.http.get_gateway()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 786, in get_gateway
    data = await self.request(Route('GET', '/gateway'))
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 158, in request
    async with self.__session.request(method, url, **kwargs) as r:
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 1005, in __aenter__
    self._resp = await self._coro
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 476, in _request
    timeout=real_timeout
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 522, in connect
    proto = await self._create_connection(req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 854, in _create_connection
    req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 959, in _create_direct_connection
    raise ClientConnectorError(req.connection_key, exc) from exc
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host discordapp.com:443 ssl:None [getaddrinfo failed]
2019-05-07 09:18:11,546 - discord.client - ERROR - Attempting a reconnect in 4.55s
Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 955, in _create_direct_connection
    traces=traces), loop=self._loop)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 825, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\resolver.py", line 30, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "d:\python3.6-64\Lib\concurrent\futures\thread.py", line 55, in run
    result = self.fn(*self.args, **self.kwargs)
  File "d:\python3.6-64\Lib\socket.py", line 743, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 431, in connect
    await self._connect()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 392, in _connect
    self.ws = await asyncio.wait_for(coro, timeout=180.0, loop=self.loop)
  File "d:\python3.6-64\Lib\asyncio\tasks.py", line 358, in wait_for
    return fut.result()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\gateway.py", line 219, in from_client
    gateway = await client.http.get_gateway()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 786, in get_gateway
    data = await self.request(Route('GET', '/gateway'))
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 158, in request
    async with self.__session.request(method, url, **kwargs) as r:
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 1005, in __aenter__
    self._resp = await self._coro
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 476, in _request
    timeout=real_timeout
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 522, in connect
    proto = await self._create_connection(req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 854, in _create_connection
    req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 959, in _create_direct_connection
    raise ClientConnectorError(req.connection_key, exc) from exc
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host discordapp.com:443 ssl:None [getaddrinfo failed]
2019-05-07 09:18:16,255 - discord.client - ERROR - Attempting a reconnect in 15.56s
Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 955, in _create_direct_connection
    traces=traces), loop=self._loop)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 825, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\resolver.py", line 30, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "d:\python3.6-64\Lib\concurrent\futures\thread.py", line 55, in run
    result = self.fn(*self.args, **self.kwargs)
  File "d:\python3.6-64\Lib\socket.py", line 743, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 431, in connect
    await self._connect()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 392, in _connect
    self.ws = await asyncio.wait_for(coro, timeout=180.0, loop=self.loop)
  File "d:\python3.6-64\Lib\asyncio\tasks.py", line 358, in wait_for
    return fut.result()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\gateway.py", line 219, in from_client
    gateway = await client.http.get_gateway()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 786, in get_gateway
    data = await self.request(Route('GET', '/gateway'))
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 158, in request
    async with self.__session.request(method, url, **kwargs) as r:
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 1005, in __aenter__
    self._resp = await self._coro
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 476, in _request
    timeout=real_timeout
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 522, in connect
    proto = await self._create_connection(req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 854, in _create_connection
    req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 959, in _create_direct_connection
    raise ClientConnectorError(req.connection_key, exc) from exc
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host discordapp.com:443 ssl:None [getaddrinfo failed]
2019-05-07 09:18:32,605 - discord.client - ERROR - Attempting a reconnect in 18.07s
Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 924, in _wrap_create_connection
    await self._loop.create_connection(*args, **kwargs))
  File "d:\python3.6-64\Lib\asyncio\base_events.py", line 803, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "d:\python3.6-64\Lib\asyncio\base_events.py", line 829, in _create_connection_transport
    yield from waiter
  File "d:\python3.6-64\Lib\asyncio\sslproto.py", line 503, in data_received
    ssldata, appdata = self._sslpipe.feed_ssldata(data)
  File "d:\python3.6-64\Lib\asyncio\sslproto.py", line 201, in feed_ssldata
    self._sslobj.do_handshake()
  File "d:\python3.6-64\Lib\ssl.py", line 683, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:748)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 431, in connect
    await self._connect()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 392, in _connect
    self.ws = await asyncio.wait_for(coro, timeout=180.0, loop=self.loop)
  File "d:\python3.6-64\Lib\asyncio\tasks.py", line 358, in wait_for
    return fut.result()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\gateway.py", line 219, in from_client
    gateway = await client.http.get_gateway()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 786, in get_gateway
    data = await self.request(Route('GET', '/gateway'))
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 158, in request
    async with self.__session.request(method, url, **kwargs) as r:
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 1005, in __aenter__
    self._resp = await self._coro
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 476, in _request
    timeout=real_timeout
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 522, in connect
    proto = await self._create_connection(req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 854, in _create_connection
    req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 992, in _create_direct_connection
    raise last_exc
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 974, in _create_direct_connection
    req=req, client_error=client_error)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 929, in _wrap_create_connection
    raise ClientConnectorSSLError(req.connection_key, exc) from exc
aiohttp.client_exceptions.ClientConnectorSSLError: Cannot connect to host discordapp.com:443 ssl:None [[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:748)]
2019-05-07 09:18:50,986 - discord.client - ERROR - Attempting a reconnect in 14.61s
Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 924, in _wrap_create_connection
    await self._loop.create_connection(*args, **kwargs))
  File "d:\python3.6-64\Lib\asyncio\base_events.py", line 803, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "d:\python3.6-64\Lib\asyncio\base_events.py", line 829, in _create_connection_transport
    yield from waiter
  File "d:\python3.6-64\Lib\asyncio\sslproto.py", line 503, in data_received
    ssldata, appdata = self._sslpipe.feed_ssldata(data)
  File "d:\python3.6-64\Lib\asyncio\sslproto.py", line 201, in feed_ssldata
    self._sslobj.do_handshake()
  File "d:\python3.6-64\Lib\ssl.py", line 683, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:748)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 431, in connect
    await self._connect()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 392, in _connect
    self.ws = await asyncio.wait_for(coro, timeout=180.0, loop=self.loop)
  File "d:\python3.6-64\Lib\asyncio\tasks.py", line 358, in wait_for
    return fut.result()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\gateway.py", line 219, in from_client
    gateway = await client.http.get_gateway()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 786, in get_gateway
    data = await self.request(Route('GET', '/gateway'))
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 158, in request
    async with self.__session.request(method, url, **kwargs) as r:
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 1005, in __aenter__
    self._resp = await self._coro
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 476, in _request
    timeout=real_timeout
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 522, in connect
    proto = await self._create_connection(req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 854, in _create_connection
    req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 992, in _create_direct_connection
    raise last_exc
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 974, in _create_direct_connection
    req=req, client_error=client_error)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 929, in _wrap_create_connection
    raise ClientConnectorSSLError(req.connection_key, exc) from exc
aiohttp.client_exceptions.ClientConnectorSSLError: Cannot connect to host discordapp.com:443 ssl:None [[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:748)]
2019-05-07 14:29:35,724 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<Client.start() done, defined at F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py:500> exception=ClientConnectorSSLError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:748)')>
Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 924, in _wrap_create_connection
    await self._loop.create_connection(*args, **kwargs))
  File "d:\python3.6-64\Lib\asyncio\base_events.py", line 803, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "d:\python3.6-64\Lib\asyncio\base_events.py", line 829, in _create_connection_transport
    yield from waiter
  File "d:\python3.6-64\Lib\asyncio\sslproto.py", line 503, in data_received
    ssldata, appdata = self._sslpipe.feed_ssldata(data)
  File "d:\python3.6-64\Lib\asyncio\sslproto.py", line 201, in feed_ssldata
    self._sslobj.do_handshake()
  File "d:\python3.6-64\Lib\ssl.py", line 683, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:748)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 508, in start
    await self.login(*args, bot=bot)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 380, in login
    await self.http.static_login(token, bot=bot)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 258, in static_login
    data = await self.request(Route('GET', '/users/@me'))
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 158, in request
    async with self.__session.request(method, url, **kwargs) as r:
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 1005, in __aenter__
    self._resp = await self._coro
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 476, in _request
    timeout=real_timeout
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 522, in connect
    proto = await self._create_connection(req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 854, in _create_connection
    req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 992, in _create_direct_connection
    raise last_exc
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 974, in _create_direct_connection
    req=req, client_error=client_error)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 929, in _wrap_create_connection
    raise ClientConnectorSSLError(req.connection_key, exc) from exc
aiohttp.client_exceptions.ClientConnectorSSLError: Cannot connect to host discordapp.com:443 ssl:None [[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:748)]
2019-05-07 14:52:49,015 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<Client.start() done, defined at F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py:500> exception=ClientConnectorSSLError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:748)')>
Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 924, in _wrap_create_connection
    await self._loop.create_connection(*args, **kwargs))
  File "d:\python3.6-64\Lib\asyncio\base_events.py", line 803, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "d:\python3.6-64\Lib\asyncio\base_events.py", line 829, in _create_connection_transport
    yield from waiter
  File "d:\python3.6-64\Lib\asyncio\sslproto.py", line 503, in data_received
    ssldata, appdata = self._sslpipe.feed_ssldata(data)
  File "d:\python3.6-64\Lib\asyncio\sslproto.py", line 201, in feed_ssldata
    self._sslobj.do_handshake()
  File "d:\python3.6-64\Lib\ssl.py", line 683, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:748)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 508, in start
    await self.login(*args, bot=bot)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 380, in login
    await self.http.static_login(token, bot=bot)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 258, in static_login
    data = await self.request(Route('GET', '/users/@me'))
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 158, in request
    async with self.__session.request(method, url, **kwargs) as r:
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 1005, in __aenter__
    self._resp = await self._coro
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 476, in _request
    timeout=real_timeout
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 522, in connect
    proto = await self._create_connection(req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 854, in _create_connection
    req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 992, in _create_direct_connection
    raise last_exc
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 974, in _create_direct_connection
    req=req, client_error=client_error)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 929, in _wrap_create_connection
    raise ClientConnectorSSLError(req.connection_key, exc) from exc
aiohttp.client_exceptions.ClientConnectorSSLError: Cannot connect to host discordapp.com:443 ssl:None [[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:748)]
2019-05-07 15:19:19,805 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished coro=<Client.start() done, defined at F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py:500> exception=ClientConnectorSSLError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:748)')>
Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 924, in _wrap_create_connection
    await self._loop.create_connection(*args, **kwargs))
  File "d:\python3.6-64\Lib\asyncio\base_events.py", line 803, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "d:\python3.6-64\Lib\asyncio\base_events.py", line 829, in _create_connection_transport
    yield from waiter
  File "d:\python3.6-64\Lib\asyncio\sslproto.py", line 503, in data_received
    ssldata, appdata = self._sslpipe.feed_ssldata(data)
  File "d:\python3.6-64\Lib\asyncio\sslproto.py", line 201, in feed_ssldata
    self._sslobj.do_handshake()
  File "d:\python3.6-64\Lib\ssl.py", line 683, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:748)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 508, in start
    await self.login(*args, bot=bot)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 380, in login
    await self.http.static_login(token, bot=bot)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 258, in static_login
    data = await self.request(Route('GET', '/users/@me'))
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 158, in request
    async with self.__session.request(method, url, **kwargs) as r:
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 1005, in __aenter__
    self._resp = await self._coro
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 476, in _request
    timeout=real_timeout
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 522, in connect
    proto = await self._create_connection(req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 854, in _create_connection
    req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 992, in _create_direct_connection
    raise last_exc
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 974, in _create_direct_connection
    req=req, client_error=client_error)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 929, in _wrap_create_connection
    raise ClientConnectorSSLError(req.connection_key, exc) from exc
aiohttp.client_exceptions.ClientConnectorSSLError: Cannot connect to host discordapp.com:443 ssl:None [[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:748)]
2019-05-07 16:11:36,655 - db_handler - ERROR - Get allycode is FAILED. localhost:27017: [WinError 10061] No connection could be made because the target machine actively refused it
Traceback (most recent call last):
  File "f:\_DEV\Discord\SnakeBot\db_handler.py", line 146, in get_allycode
    self.allycode = self.col_discord.find_one({'discord_id': self.user_id},{'_id':0, 'ally_code': 1})
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\pymongo\collection.py", line 1269, in find_one
    for result in cursor.limit(-1):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\pymongo\cursor.py", line 1225, in next
    if len(self.__data) or self._refresh():
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\pymongo\cursor.py", line 1117, in _refresh
    self.__session = self.__collection.database.client._ensure_session()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\pymongo\mongo_client.py", line 1598, in _ensure_session
    return self.__start_session(True, causal_consistency=False)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\pymongo\mongo_client.py", line 1551, in __start_session
    server_session = self._get_server_session()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\pymongo\mongo_client.py", line 1584, in _get_server_session
    return self._topology.get_server_session()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\pymongo\topology.py", line 429, in get_server_session
    None)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\pymongo\topology.py", line 200, in _select_servers_loop
    self._error_message(selector))
pymongo.errors.ServerSelectionTimeoutError: localhost:27017: [WinError 10061] No connection could be made because the target machine actively refused it
2019-05-07 16:11:38,170 - swgoh_handler - ERROR - GET url is failed - [Expecting value: line 2 column 1 (char 1)]
Traceback (most recent call last):
  File "f:\_DEV\Discord\SnakeBot\swgoh_handler.py", line 25, in swgoh_getuser
    return json.loads(self.response.text)
  File "d:\python3.6-64\Lib\json\__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "d:\python3.6-64\Lib\json\decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "d:\python3.6-64\Lib\json\decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 2 column 1 (char 1)
2019-05-07 16:11:38,177 - discord.client - ERROR - Attempting a reconnect in 1.31s
Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\gateway.py", line 464, in poll_event
    msg = await self.recv()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\websockets\protocol.py", line 350, in recv
    yield from self.ensure_open()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\websockets\protocol.py", line 501, in ensure_open
    self.close_code, self.close_reason) from self.transfer_data_exc
websockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 1000 (OK), no reason

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 431, in connect
    await self._connect()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 395, in _connect
    await self.ws.poll_event()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\gateway.py", line 472, in poll_event
    raise ConnectionClosed(exc, shard_id=self.shard_id) from exc
discord.errors.ConnectionClosed: WebSocket connection is closed: code = 1000 (OK), no reason
2019-05-07 16:21:41,153 - __main__ - ERROR - cmdRoster cannot be loaded. [error() got an unexpected keyword argument 'pass_context']
Traceback (most recent call last):
  File "f:\_DEV\Discord\SnakeBot\SnakeBot.py", line 64, in load
    bot.load_extension(extension)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\ext\commands\bot.py", line 618, in load_extension
    lib = importlib.import_module(name)
  File "F:\_DEV\Envs\SnakeBot\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 978, in _gcd_import
  File "<frozen importlib._bootstrap>", line 961, in _find_and_load
  File "<frozen importlib._bootstrap>", line 950, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 655, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 205, in _call_with_frames_removed
  File "f:\_DEV\Discord\SnakeBot\cmdRoster.py", line 9, in <module>
    class SaveRoster(commands.Cog):
  File "f:\_DEV\Discord\SnakeBot\cmdRoster.py", line 50, in SaveRoster
    @saveroster.error(pass_context = True)
TypeError: error() got an unexpected keyword argument 'pass_context'
2019-05-07 16:22:19,197 - __main__ - ERROR - cmdRoster cannot be loaded. [error() missing 1 required positional argument: 'coro']
Traceback (most recent call last):
  File "f:\_DEV\Discord\SnakeBot\SnakeBot.py", line 64, in load
    bot.load_extension(extension)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\ext\commands\bot.py", line 618, in load_extension
    lib = importlib.import_module(name)
  File "F:\_DEV\Envs\SnakeBot\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 978, in _gcd_import
  File "<frozen importlib._bootstrap>", line 961, in _find_and_load
  File "<frozen importlib._bootstrap>", line 950, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 655, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 205, in _call_with_frames_removed
  File "f:\_DEV\Discord\SnakeBot\cmdRoster.py", line 9, in <module>
    class SaveRoster(commands.Cog):
  File "f:\_DEV\Discord\SnakeBot\cmdRoster.py", line 50, in SaveRoster
    @saveroster.error()
TypeError: error() missing 1 required positional argument: 'coro'
2019-05-08 13:51:44,576 - db_handler - ERROR - List saved roster is FAILED
Traceback (most recent call last):
  File "f:\_DEV\Discord\SnakeBot\db_handler.py", line 208, in listsaves
    self.saves[save] = self.date
NameError: name 'save' is not defined
2019-05-08 13:59:59,055 - discord.client - ERROR - Attempting a reconnect in 1.32s
Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\gateway.py", line 464, in poll_event
    msg = await self.recv()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\websockets\protocol.py", line 350, in recv
    yield from self.ensure_open()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\websockets\protocol.py", line 501, in ensure_open
    self.close_code, self.close_reason) from self.transfer_data_exc
websockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 1000 (OK), no reason

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 431, in connect
    await self._connect()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 395, in _connect
    await self.ws.poll_event()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\gateway.py", line 472, in poll_event
    raise ConnectionClosed(exc, shard_id=self.shard_id) from exc
discord.errors.ConnectionClosed: WebSocket connection is closed: code = 1000 (OK), no reason
2019-05-08 14:12:52,398 - discord.client - ERROR - Attempting a reconnect in 0.69s
Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\gateway.py", line 464, in poll_event
    msg = await self.recv()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\websockets\protocol.py", line 350, in recv
    yield from self.ensure_open()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\websockets\protocol.py", line 512, in ensure_open
    self.close_code, self.close_reason) from self.transfer_data_exc
websockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 1000 (OK), no reason

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 431, in connect
    await self._connect()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 395, in _connect
    await self.ws.poll_event()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\gateway.py", line 472, in poll_event
    raise ConnectionClosed(exc, shard_id=self.shard_id) from exc
discord.errors.ConnectionClosed: WebSocket connection is closed: code = 1000 (OK), no reason
2019-05-08 15:09:27,977 - __main__ - ERROR - <allykod> cannot be loaded. [Extension '<allykod>' could not be loaded.]
Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\ext\commands\bot.py", line 618, in load_extension
    lib = importlib.import_module(name)
  File "F:\_DEV\Envs\SnakeBot\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 978, in _gcd_import
  File "<frozen importlib._bootstrap>", line 961, in _find_and_load
  File "<frozen importlib._bootstrap>", line 948, in _find_and_load_unlocked
ModuleNotFoundError: No module named '<allykod>'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "f:\_DEV\Discord\SnakeBot\SnakeBot.py", line 64, in load
    bot.load_extension(extension)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\ext\commands\bot.py", line 620, in load_extension
    raise errors.ExtensionNotFound(name, e) from e
discord.ext.commands.errors.ExtensionNotFound: Extension '<allykod>' could not be loaded.
2019-05-08 17:08:37,033 - discord.client - ERROR - Attempting a reconnect in 1.48s
Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 955, in _create_direct_connection
    traces=traces), loop=self._loop)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 825, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\resolver.py", line 30, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "d:\python3.6-64\Lib\concurrent\futures\thread.py", line 55, in run
    result = self.fn(*self.args, **self.kwargs)
  File "d:\python3.6-64\Lib\socket.py", line 743, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 431, in connect
    await self._connect()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 401, in _connect
    self.ws = await asyncio.wait_for(coro, timeout=180.0, loop=self.loop)
  File "d:\python3.6-64\Lib\asyncio\tasks.py", line 358, in wait_for
    return fut.result()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\gateway.py", line 219, in from_client
    gateway = await client.http.get_gateway()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 786, in get_gateway
    data = await self.request(Route('GET', '/gateway'))
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 158, in request
    async with self.__session.request(method, url, **kwargs) as r:
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 1005, in __aenter__
    self._resp = await self._coro
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 476, in _request
    timeout=real_timeout
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 522, in connect
    proto = await self._create_connection(req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 854, in _create_connection
    req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 959, in _create_direct_connection
    raise ClientConnectorError(req.connection_key, exc) from exc
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host discordapp.com:443 ssl:None [getaddrinfo failed]
2019-05-08 17:08:38,765 - discord.client - ERROR - Attempting a reconnect in 0.26s
Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 955, in _create_direct_connection
    traces=traces), loop=self._loop)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 825, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\resolver.py", line 30, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "d:\python3.6-64\Lib\concurrent\futures\thread.py", line 55, in run
    result = self.fn(*self.args, **self.kwargs)
  File "d:\python3.6-64\Lib\socket.py", line 743, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 431, in connect
    await self._connect()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 392, in _connect
    self.ws = await asyncio.wait_for(coro, timeout=180.0, loop=self.loop)
  File "d:\python3.6-64\Lib\asyncio\tasks.py", line 358, in wait_for
    return fut.result()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\gateway.py", line 219, in from_client
    gateway = await client.http.get_gateway()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 786, in get_gateway
    data = await self.request(Route('GET', '/gateway'))
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 158, in request
    async with self.__session.request(method, url, **kwargs) as r:
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 1005, in __aenter__
    self._resp = await self._coro
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 476, in _request
    timeout=real_timeout
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 522, in connect
    proto = await self._create_connection(req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 854, in _create_connection
    req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 959, in _create_direct_connection
    raise ClientConnectorError(req.connection_key, exc) from exc
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host discordapp.com:443 ssl:None [getaddrinfo failed]
2019-05-08 17:08:39,117 - discord.client - ERROR - Attempting a reconnect in 6.21s
Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 955, in _create_direct_connection
    traces=traces), loop=self._loop)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 825, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\resolver.py", line 30, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "d:\python3.6-64\Lib\concurrent\futures\thread.py", line 55, in run
    result = self.fn(*self.args, **self.kwargs)
  File "d:\python3.6-64\Lib\socket.py", line 743, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 431, in connect
    await self._connect()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 392, in _connect
    self.ws = await asyncio.wait_for(coro, timeout=180.0, loop=self.loop)
  File "d:\python3.6-64\Lib\asyncio\tasks.py", line 358, in wait_for
    return fut.result()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\gateway.py", line 219, in from_client
    gateway = await client.http.get_gateway()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 786, in get_gateway
    data = await self.request(Route('GET', '/gateway'))
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 158, in request
    async with self.__session.request(method, url, **kwargs) as r:
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 1005, in __aenter__
    self._resp = await self._coro
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 476, in _request
    timeout=real_timeout
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 522, in connect
    proto = await self._create_connection(req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 854, in _create_connection
    req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 959, in _create_direct_connection
    raise ClientConnectorError(req.connection_key, exc) from exc
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host discordapp.com:443 ssl:None [getaddrinfo failed]
2019-05-08 20:04:22,084 - discord.client - ERROR - Attempting a reconnect in 0.77s
Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 955, in _create_direct_connection
    traces=traces), loop=self._loop)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 825, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\resolver.py", line 30, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "d:\python3.6-64\Lib\concurrent\futures\thread.py", line 55, in run
    result = self.fn(*self.args, **self.kwargs)
  File "d:\python3.6-64\Lib\socket.py", line 743, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 431, in connect
    await self._connect()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 401, in _connect
    self.ws = await asyncio.wait_for(coro, timeout=180.0, loop=self.loop)
  File "d:\python3.6-64\Lib\asyncio\tasks.py", line 358, in wait_for
    return fut.result()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\gateway.py", line 219, in from_client
    gateway = await client.http.get_gateway()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 786, in get_gateway
    data = await self.request(Route('GET', '/gateway'))
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 158, in request
    async with self.__session.request(method, url, **kwargs) as r:
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 1005, in __aenter__
    self._resp = await self._coro
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 476, in _request
    timeout=real_timeout
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 522, in connect
    proto = await self._create_connection(req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 854, in _create_connection
    req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 959, in _create_direct_connection
    raise ClientConnectorError(req.connection_key, exc) from exc
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host discordapp.com:443 ssl:None [getaddrinfo failed]
2019-05-13 21:54:43,003 - db_handler - ERROR - List saved roster is FAILED
Traceback (most recent call last):
  File "f:\_DEV\Discord\SnakeBot\db_handler.py", line 202, in listsaves
    self.roster_saves = self.col_discord.find_one(self.query, {'roster':1})['roster']
TypeError: 'NoneType' object is not subscriptable
2019-05-13 21:55:27,573 - db_handler - ERROR - List saved roster is FAILED
Traceback (most recent call last):
  File "f:\_DEV\Discord\SnakeBot\db_handler.py", line 202, in listsaves
    self.roster_saves = self.col_discord.find_one(self.query, {'roster':1})['roster']
TypeError: 'NoneType' object is not subscriptable
2019-05-14 00:57:38,388 - discord.client - ERROR - Attempting a reconnect in 1.48s
Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 955, in _create_direct_connection
    traces=traces), loop=self._loop)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 825, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\resolver.py", line 30, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "d:\python3.6-64\Lib\concurrent\futures\thread.py", line 55, in run
    result = self.fn(*self.args, **self.kwargs)
  File "d:\python3.6-64\Lib\socket.py", line 743, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 431, in connect
    await self._connect()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 401, in _connect
    self.ws = await asyncio.wait_for(coro, timeout=180.0, loop=self.loop)
  File "d:\python3.6-64\Lib\asyncio\tasks.py", line 358, in wait_for
    return fut.result()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\gateway.py", line 219, in from_client
    gateway = await client.http.get_gateway()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 786, in get_gateway
    data = await self.request(Route('GET', '/gateway'))
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 158, in request
    async with self.__session.request(method, url, **kwargs) as r:
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 1005, in __aenter__
    self._resp = await self._coro
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 476, in _request
    timeout=real_timeout
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 522, in connect
    proto = await self._create_connection(req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 854, in _create_connection
    req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 959, in _create_direct_connection
    raise ClientConnectorError(req.connection_key, exc) from exc
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host discordapp.com:443 ssl:None [getaddrinfo failed]
2019-05-14 07:53:13,609 - discord.client - ERROR - Attempting a reconnect in 0.92s
Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 955, in _create_direct_connection
    traces=traces), loop=self._loop)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 825, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\resolver.py", line 30, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "d:\python3.6-64\Lib\concurrent\futures\thread.py", line 55, in run
    result = self.fn(*self.args, **self.kwargs)
  File "d:\python3.6-64\Lib\socket.py", line 743, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 431, in connect
    await self._connect()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 401, in _connect
    self.ws = await asyncio.wait_for(coro, timeout=180.0, loop=self.loop)
  File "d:\python3.6-64\Lib\asyncio\tasks.py", line 358, in wait_for
    return fut.result()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\gateway.py", line 219, in from_client
    gateway = await client.http.get_gateway()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 786, in get_gateway
    data = await self.request(Route('GET', '/gateway'))
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\http.py", line 158, in request
    async with self.__session.request(method, url, **kwargs) as r:
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 1005, in __aenter__
    self._resp = await self._coro
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\client.py", line 476, in _request
    timeout=real_timeout
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 522, in connect
    proto = await self._create_connection(req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 854, in _create_connection
    req, traces, timeout)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\aiohttp\connector.py", line 959, in _create_direct_connection
    raise ClientConnectorError(req.connection_key, exc) from exc
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host discordapp.com:443 ssl:None [getaddrinfo failed]
2019-05-15 16:40:17,652 - db_handler - ERROR - Insert data to DB failed for link_add
Traceback (most recent call last):
  File "f:\_DEV\Discord\SnakeBot\db_handler.py", line 227, in link_add
    self.link_add = self.col_links.insert_one(self.link_data)
AttributeError: 'Db_handler' object has no attribute 'link_data'
2019-05-16 13:07:38,464 - __main__ - ERROR - cmdGetlinks cannot be unloaded. [Extension 'cmdGetlinks' has not been loaded.]
Traceback (most recent call last):
  File "f:\_DEV\Discord\SnakeBot\SnakeBot.py", line 75, in unload
    bot.unload_extension(extension)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\ext\commands\bot.py", line 650, in unload_extension
    raise errors.ExtensionNotLoaded(name)
discord.ext.commands.errors.ExtensionNotLoaded: Extension 'cmdGetlinks' has not been loaded.
2019-05-16 13:07:50,320 - __main__ - ERROR - GetLinks cannot be unloaded. [Extension 'GetLinks' has not been loaded.]
Traceback (most recent call last):
  File "f:\_DEV\Discord\SnakeBot\SnakeBot.py", line 75, in unload
    bot.unload_extension(extension)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\ext\commands\bot.py", line 650, in unload_extension
    raise errors.ExtensionNotLoaded(name)
discord.ext.commands.errors.ExtensionNotLoaded: Extension 'GetLinks' has not been loaded.
2019-05-16 13:08:02,407 - __main__ - ERROR - cmdgetLinks cannot be unloaded. [Extension 'cmdgetLinks' has not been loaded.]
Traceback (most recent call last):
  File "f:\_DEV\Discord\SnakeBot\SnakeBot.py", line 75, in unload
    bot.unload_extension(extension)
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\ext\commands\bot.py", line 650, in unload_extension
    raise errors.ExtensionNotLoaded(name)
discord.ext.commands.errors.ExtensionNotLoaded: Extension 'cmdgetLinks' has not been loaded.
2019-05-16 13:40:59,380 - discord.client - ERROR - Attempting a reconnect in 0.03s
Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\gateway.py", line 464, in poll_event
    msg = await self.recv()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\websockets\protocol.py", line 350, in recv
    yield from self.ensure_open()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\websockets\protocol.py", line 512, in ensure_open
    self.close_code, self.close_reason) from self.transfer_data_exc
websockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 1000 (OK), no reason

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 431, in connect
    await self._connect()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\client.py", line 395, in _connect
    await self.ws.poll_event()
  File "F:\_DEV\Envs\SnakeBot\lib\site-packages\discord\gateway.py", line 472, in poll_event
    raise ConnectionClosed(exc, shard_id=self.shard_id) from exc
discord.errors.ConnectionClosed: WebSocket connection is closed: code = 1000 (OK), no reason
